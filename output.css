/*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */
@import url(https://fonts.bunny.net/css?family=basic:400);
@layer properties;
:where(.btn) {
  display: flex;
  height: 2.4em;
  cursor: pointer;
  align-items: center;
  justify-content: center;
  gap: calc(var(--spacing) * 2);
  overflow: clip;
  border-radius: var(--radius-lg);
  border-style: var(--tw-border-style);
  border-width: 3px;
  border-color: transparent;
  padding-inline: 1em;
  font-size: 1.25rem;
  --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  --tw-shadow-color: color-mix(in srgb, #000 40%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-black) 40%, transparent) var(--tw-shadow-alpha), transparent);
  }
  position: relative;
  transition: border-color var(--transition-speed-fast) ease-out, scale 0.05s ease-out, box-shadow 0.1s ease-out, background-color var(--transition-speed-fast) ease-out;
  transform-origin: center center;
  outline-offset: 2px;
  color: var(--color-neutral-content);
  &::before {
    content: "";
    transition: border-color var(--transition-speed-fast) ease-out;
    position: absolute;
    top: calc(var(--spacing) * 1);
    left: calc(var(--spacing) * 1);
    height: calc(1/3 * 100%);
    max-height: calc(var(--spacing) * 6);
    width: calc(1/4 * 100%);
    max-width: calc(var(--spacing) * 12);
    border-top-left-radius: var(--radius-xl);
    border-top-style: var(--tw-border-style);
    border-top-width: 3px;
    border-left-style: var(--tw-border-style);
    border-left-width: 3px;
  }
  &:focus-visible {
    outline: 0;
  }
  &:active:not(.kbd) {
    scale: var(--btn-scale-down-onclick);
    --tw-shadow: 0 0 #0000;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  &[disabled] {
    cursor: not-allowed;
    opacity: 60%;
    --tw-shadow: 0 0 #0000;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    &::before {
      content: "";
      border-style: var(--tw-border-style);
      border-width: 0px;
    }
    &:active {
      scale: 1;
    }
  }
}
:where(.btn-xs) {
  font-size: 0.875rem;
}
:where(.btn-sm) {
  font-size: 1rem;
}
:where(.btn-lg) {
  font-size: 1.5rem;
}
:where(.btn-xl) {
  font-size: 2rem;
}
:where(.btn-square) {
  aspect-ratio: 1 / 1;
  padding: calc(var(--spacing) * 0);
  &::before {
    top: 0.125rem;
    left: 0.125rem;
    height: calc(1/3 * 100%);
    width: calc(1/3 * 100%);
    border-top-left-radius: var(--radius-lg);
  }
  &.btn-sm::before {
    top: 0.135rem;
    left: 0.135rem;
  }
  &.btn-lg::before {
    top: 0.175rem;
    left: 0.175rem;
    border-top-left-radius: var(--radius-xl);
  }
  &.btn-xl::before {
    top: 0.2rem;
    left: 0.2rem;
    border-top-left-radius: var(--radius-xl);
  }
  &.btn-2xl::before {
    top: 0.4rem;
    left: 0.4rem;
    height: calc(1/4 * 100%);
    width: calc(1/4 * 100%);
    border-top-left-radius: var(--radius-xl);
  }
}
:where(.btn-circle) {
  aspect-ratio: 1 / 1;
  border-radius: calc(infinity * 1px);
  padding: calc(var(--spacing) * 0);
  &::before {
    top: 0.15rem;
    left: 0.15rem;
    height: calc(1/3 * 100%);
    width: calc(1/3 * 100%);
    border-top-left-radius: calc(infinity * 1px);
  }
  &.btn-sm::before {
    top: 0.135rem;
    left: 0.135rem;
  }
  &.btn-lg::before {
    top: 0.175rem;
    left: 0.175rem;
  }
  &.btn-xl::before {
    top: 0.2rem;
    left: 0.2rem;
  }
  &.btn-2xl::before {
    top: 0.4rem;
    left: 0.4rem;
    height: calc(1/4 * 100%);
    width: calc(1/4 * 100%);
  }
}
:where(.btn-neutral) {
  border-color: var(--color-neutral);
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in hsl, var(--color-neutral), black 15%);
  }
  background-color: var(--color-neutral);
  color: var(--color-neutral-content);
  &::before {
    border-color: hsla(0, 0%, 100%, 0.2);
  }
  &:focus-visible {
    outline: 2px solid var(--color-neutral);
  }
  &.btn-outline {
    background-color: var(--color-neutral);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in hsl, var(--color-neutral), transparent 85%);
    }
    border-color: var(--color-neutral);
    &::before {
      border-color: var(--color-neutral);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in hsl, var(--color-neutral), transparent 20%);
      }
    }
    &:focus-visible {
      background-color: var(--color-neutral);
      &::before {
        border-color: hsla(0, 0%, 100%, 0.2);
      }
    }
  }
}
:where(.btn-primary) {
  border-color: var(--color-primary);
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in hsl, var(--color-primary), black 15%);
  }
  background-color: var(--color-primary);
  color: var(--color-primary-content);
  &::before {
    border-color: hsla(0, 0%, 100%, 0.3);
  }
  &:focus-visible {
    outline: 2px solid var(--color-primary);
  }
  &.btn-outline {
    background-color: var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in hsl, var(--color-primary), transparent 85%);
    }
    border-color: var(--color-primary);
    &::before {
      border-color: var(--color-primary);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in hsl, var(--color-primary), transparent 50%);
      }
    }
    &:focus-visible {
      background-color: var(--color-primary);
      &::before {
        border-color: hsla(0, 0%, 100%, 0.3);
      }
    }
  }
}
:where(.btn-secondary) {
  border-color: var(--color-secondary);
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in hsl, var(--color-secondary), black 15%);
  }
  background-color: var(--color-secondary);
  color: var(--color-secondary-content);
  &::before {
    border-color: hsla(0, 0%, 100%, 0.3);
  }
  &:focus-visible {
    outline: 2px solid var(--color-secondary);
  }
  &.btn-outline {
    background-color: var(--color-secondary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix( in hsl, var(--color-secondary), transparent 85% );
    }
    border-color: var(--color-secondary);
    &::before {
      border-color: var(--color-secondary);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in hsl, var(--color-secondary), transparent 50%);
      }
    }
    &:focus-visible {
      background-color: var(--color-secondary);
      &::before {
        border-color: hsla(0, 0%, 100%, 0.3);
      }
    }
  }
}
:where(.btn-accent) {
  border-color: var(--color-accent);
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in hsl, var(--color-accent), black 15%);
  }
  background-color: var(--color-accent);
  color: var(--color-accent-content);
  &::before {
    border-color: hsla(0, 0%, 100%, 0.5);
  }
  &:focus-visible {
    outline: 2px solid var(--color-accent);
  }
  &.btn-outline {
    background-color: var(--color-accent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in hsl, var(--color-accent), transparent 85%);
    }
    color: var(--color-accent);
    border-color: var(--color-accent);
    &::before {
      border-color: var(--color-accent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in hsl, var(--color-accent), transparent 50%);
      }
    }
    &:focus-visible {
      background-color: var(--color-accent);
      color: var(--color-accent-content);
      &::before {
        border-color: hsla(0, 0%, 100%, 0.5);
      }
    }
  }
}
:where(.btn-info) {
  border-color: var(--color-info);
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in hsl, var(--color-info), black 15%);
  }
  background-color: var(--color-info);
  color: var(--color-info-content);
  &::before {
    border-color: hsla(0, 0%, 100%, 0.5);
  }
  &:focus-visible {
    outline: 2px solid var(--color-info);
  }
  &.btn-outline {
    background-color: var(--color-info);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in hsl, var(--color-info), transparent 85%);
    }
    color: var(--color-info);
    border-color: var(--color-info);
    &::before {
      border-color: var(--color-info);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in hsl, var(--color-info), transparent 50%);
      }
    }
    &:focus-visible {
      background: var(--color-info);
      color: var(--color-info-content);
      &::before {
        border-color: hsla(0, 0%, 100%, 0.5);
      }
    }
  }
}
:where(.btn-success) {
  border-color: var(--color-success);
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in hsl, var(--color-success), black 15%);
  }
  background-color: var(--color-success);
  color: var(--color-success-content);
  &::before {
    border-color: hsla(0, 0%, 100%, 0.5);
  }
  &:focus-visible {
    outline: 2px solid var(--color-success);
  }
  &.btn-outline {
    background-color: var(--color-success);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in hsl, var(--color-success), transparent 85%);
    }
    color: var(--color-success);
    border-color: var(--color-success);
    &::before {
      border-color: var(--color-success);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in hsl, var(--color-success), transparent 50%);
      }
    }
    &:focus-visible {
      background-color: var(--color-success);
      color: var(--color-success-content);
      &::before {
        border-color: hsla(0, 0%, 100%, 0.5);
      }
    }
  }
}
:where(.btn-warning) {
  border-color: var(--color-warning);
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in hsl, var(--color-warning), black 15%);
  }
  background-color: var(--color-warning);
  color: var(--color-warning-content);
  &::before {
    border-color: hsla(0, 0%, 100%, 0.4);
  }
  &:focus-visible {
    outline: 2px solid var(--color-warning);
  }
  &.btn-outline {
    background-color: var(--color-warning);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in hsl, var(--color-warning), transparent 85%);
    }
    color: var(--color-warning);
    border-color: var(--color-warning);
    &::before {
      border-color: var(--color-warning);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in hsl, var(--color-warning), transparent 50%);
      }
    }
    &:focus-visible {
      background-color: var(--color-warning);
      color: var(--color-warning-content);
      &::before {
        border-color: hsla(0, 0%, 100%, 0.4);
      }
    }
  }
}
:where(.btn-error) {
  border-color: var(--color-error);
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in hsl, var(--color-error), black 15%);
  }
  background-color: var(--color-error);
  color: var(--color-error-content);
  &::before {
    border-color: hsla(0, 0%, 100%, 0.3);
  }
  &:focus-visible {
    outline: 2px solid var(--color-error);
  }
  &.btn-outline {
    background-color: var(--color-error);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in hsl, var(--color-error), transparent 85%);
    }
    color: var(--color-error);
    border-color: var(--color-error);
    &::before {
      border-color: var(--color-error);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in hsl, var(--color-error), transparent 50%);
      }
    }
    &:focus-visible {
      background-color: var(--color-error);
      color: var(--color-error-content);
      &::before {
        border-color: hsla(0, 0%, 100%, 0.3);
      }
    }
  }
}
:where(.btn-ghost) {
  border-style: var(--tw-border-style);
  border-width: 2px;
  --tw-shadow: 0 0 #0000;
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  &::before {
    border-color: transparent;
  }
  &:focus-visible {
    outline: 2px solid var(--color-neutral-content);
  }
  &:not(&:disabled):hover {
    background-color: var(--color-neutral-content);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix( in hsl, var(--color-neutral-content), transparent 80% );
    }
  }
}
:where(.kbd) {
  --box-shadow: 0px 0px 0px 2px var(--color-base-100),
    0px 4px 0px 2px var(--color-base-100);
  margin-inline: 0.250em;
  display: inline;
  background-color: var(--color-neutral);
  box-shadow: var(--box-shadow);
  &::before {
    border-color: hsla(0, 0%, 100%, 0.3);
    top: calc(var(--spacing) * 0.5);
    left: calc(var(--spacing) * 0.5);
  }
}
:where(.btn-link) {
  border-style: var(--tw-border-style);
  border-width: 0px;
  background-color: transparent;
  --tw-shadow: 0 0 #0000;
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  &::before {
    border-style: var(--tw-border-style);
    border-width: 0px;
  }
  &:hover {
    text-decoration: underline;
  }
  &:focus-visible {
    outline: 2px solid var(--color-neutral-content);
    @supports (color: color-mix(in lab, red, red)) {
      outline: 2px solid color-mix(in hsl, var(--color-neutral-content), transparent 50%);
    }
  }
}
:where(.toggle) {
  --width: 4rem;
  --height: 2rem;
  --color-toggle-bg: var(--color-base-200);
  --color-toggle-bg-checked: var(--color-neutral);
  --color-border: var(--color-neutral-content);
  @supports (color: color-mix(in lab, red, red)) {
    --color-border: color-mix(in hsl, var(--color-neutral-content), black 40%);
  }
  --color-border-checked: var(--color-neutral-content);
  position: relative;
  margin: calc(var(--spacing) * 0);
  display: inline-block;
  cursor: pointer;
  appearance: none;
  border-radius: var(--radius-lg);
  --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  --tw-shadow-color: color-mix(in srgb, #000 40%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-black) 40%, transparent) var(--tw-shadow-alpha), transparent);
  }
  width: var(--width);
  height: var(--height);
  background-color: var(--color-toggle-bg);
  transition: background-color var(--transition-speed) ease;
  border: 3px solid var(--color-border);
  box-sizing: content-box !important;
}
:where(.toggle)::after {
  --toggle-spacing: 4px;
  content: "";
  position: absolute;
  top: var(--toggle-spacing);
  left: var(--toggle-spacing);
  height: calc(var(--height) - calc(var(--toggle-spacing) * 2));
  background-color: var(--color-neutral-content);
  transition: transform var(--transition-speed) ease-out;
  transform: translateX(0);
  aspect-ratio: 1 / 1;
  border-radius: var(--radius-sm);
}
.toggle:checked {
  background-color: var(--color-toggle-bg-checked);
  border: 3px solid var(--color-border-checked);
}
.toggle:checked::after {
  transform: translateX(calc(var(--width) - var(--height)));
}
.toggle:focus-visible:checked {
  outline: 2px solid var(--color-border-checked);
}
.toggle:focus-visible {
  outline: 2px solid var(--color-border);
}
.toggle-sm {
  --width: 3rem;
  --height: 1.5rem;
  border-radius: var(--radius-md);
  &::after {
    --toggle-spacing: 3px;
    border-radius: var(--radius-xs);
  }
}
.toggle-lg {
  --width: 5rem;
  --height: 2.5rem;
  &::after {
    --toggle-spacing: 5px;
  }
}
.toggle-primary {
  --color-toggle-bg: var(--color-primary);
  @supports (color: color-mix(in lab, red, red)) {
    --color-toggle-bg: color-mix(in hsl, var(--color-primary), transparent 30%);
  }
  --color-toggle-bg-checked: var(--color-primary);
  --color-border: var(--color-primary);
  --color-border-checked: var(--color-primary);
  &::after {
    background-color: var(--color-primary-content);
  }
}
.toggle-secondary {
  --color-toggle-bg: var(--color-secondary);
  @supports (color: color-mix(in lab, red, red)) {
    --color-toggle-bg: color-mix(in hsl, var(--color-secondary), transparent 30%);
  }
  --color-toggle-bg-checked: var(--color-secondary);
  --color-border: var(--color-secondary);
  --color-border-checked: var(--color-secondary);
  &::after {
    background-color: var(--color-secondary-content);
  }
}
.toggle-accent {
  --color-toggle-bg: var(--color-accent);
  @supports (color: color-mix(in lab, red, red)) {
    --color-toggle-bg: color-mix(in hsl, var(--color-accent), transparent 30%);
  }
  --color-toggle-bg-checked: var(--color-accent);
  --color-border: var(--color-accent);
  --color-border-checked: var(--color-accent);
  &::after {
    background-color: var(--color-accent-content);
  }
}
.toggle-info {
  --color-toggle-bg: var(--color-info);
  @supports (color: color-mix(in lab, red, red)) {
    --color-toggle-bg: color-mix(in hsl, var(--color-info), transparent 30%);
  }
  --color-toggle-bg-checked: var(--color-info);
  --color-border: var(--color-info);
  --color-border-checked: var(--color-info);
  &::after {
    background-color: var(--color-info-content);
  }
}
.toggle-success {
  --color-toggle-bg: var(--color-success);
  @supports (color: color-mix(in lab, red, red)) {
    --color-toggle-bg: color-mix(in hsl, var(--color-success), transparent 30%);
  }
  --color-toggle-bg-checked: var(--color-success);
  --color-border: var(--color-success);
  --color-border-checked: var(--color-success);
  &::after {
    background-color: var(--color-success-content);
  }
}
.toggle-warning {
  --color-toggle-bg: var(--color-warning);
  @supports (color: color-mix(in lab, red, red)) {
    --color-toggle-bg: color-mix(in hsl, var(--color-warning), transparent 30%);
  }
  --color-toggle-bg-checked: var(--color-warning);
  --color-border: var(--color-warning);
  --color-border-checked: var(--color-warning);
  &::after {
    background-color: var(--color-warning-content);
  }
}
.toggle-error {
  --color-toggle-bg: var(--color-error);
  @supports (color: color-mix(in lab, red, red)) {
    --color-toggle-bg: color-mix(in hsl, var(--color-error), transparent 30%);
  }
  --color-toggle-bg-checked: var(--color-error);
  --color-border: var(--color-error);
  --color-border-checked: var(--color-error);
  &::after {
    background-color: var(--color-error-content);
  }
}
:where(.navbar) {
  display: flex;
  width: 100%;
  align-items: center;
  justify-content: space-between;
  border-bottom-right-radius: var(--radius-4xl);
  border-bottom-left-radius: var(--radius-4xl);
  padding-inline: calc(var(--spacing) * 8);
  padding-block: calc(var(--spacing) * 4);
  & > * {
    display: flex;
  }
}
.navbar-shadow {
  --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --font-weight-bold: 700;
    --radius-xs: 0.125rem;
    --radius-sm: 0.25rem;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --radius-4xl: 2rem;
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .flex {
    display: flex;
  }
  .inline {
    display: inline;
  }
  .w-full {
    width: 100%;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .items-center {
    align-items: center;
  }
  .gap-0 {
    gap: calc(var(--spacing) * 0);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .pt-6 {
    padding-top: calc(var(--spacing) * 6);
  }
  .pb-2 {
    padding-bottom: calc(var(--spacing) * 2);
  }
  .pl-4 {
    padding-left: calc(var(--spacing) * 4);
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
}
:root {
  --color-base-100: hsl(0, 0%, 21%);
  --color-base-200: hsl(0, 0%, 17%);
  --color-base-300: hsl(0, 0%, 13%);
  --color-neutral: hsl(0, 0%, 0%);
  --color-neutral-content: hsl(0, 0%, 90%);
  --color-primary: hsl(217, 78%, 40%);
  --color-primary-content: var(--color-primary);
  @supports (color: color-mix(in lab, red, red)) {
    --color-primary-content: color-mix(in hsl, var(--color-primary), white 90%);
  }
  --color-secondary: hsl(274, 78%, 40%);
  --color-secondary-content: var(--color-secondary);
  @supports (color: color-mix(in lab, red, red)) {
    --color-secondary-content: color-mix(in hsl, var(--color-secondary), white 90%);
  }
  --color-accent: hsl(160, 80%, 46%);
  --color-accent-content: var(--color-accent);
  @supports (color: color-mix(in lab, red, red)) {
    --color-accent-content: color-mix(in hsl, var(--color-accent), black 50%);
  }
  --color-info: hsl(180, 77%, 47%);
  --color-info-content: var(--color-info);
  @supports (color: color-mix(in lab, red, red)) {
    --color-info-content: color-mix(in hsl, var(--color-info), black 50%);
  }
  --color-success: hsl(129, 71%, 56%);
  --color-success-content: var(--color-success);
  @supports (color: color-mix(in lab, red, red)) {
    --color-success-content: color-mix(in hsl, var(--color-success), black 54%);
  }
  --color-warning: hsl(35, 100%, 58%);
  --color-warning-content: var(--color-warning);
  @supports (color: color-mix(in lab, red, red)) {
    --color-warning-content: color-mix(in hsl, var(--color-warning), black 60%);
  }
  --color-error: hsl(355, 70%, 47%);
  --color-error-content: var(--color-error);
  @supports (color: color-mix(in lab, red, red)) {
    --color-error-content: color-mix(in hsl, var(--color-error), black 65%);
  }
  --transition-speed: 0.25s;
  --transition-speed-fast: 0.125s;
  --btn-scale-down-onclick: 0.98;
}
body {
  background-color: var(--color-base-300);
  font-family: "Basic", sans-serif;
  color: var(--color-neutral-content);
}
.bg-base-100 {
  background-color: var(--color-base-100);
}
.bg-base-200 {
  background-color: var(--color-base-200);
}
.bg-base-300 {
  background-color: var(--color-base-300);
}
.color-neutral {
  color: var(--color-neutral);
}
.color-neutral-content {
  color: var(--color-neutral-content);
}
.color-primary {
  color: var(--color-primary);
}
.color-primary-content {
  color: var(--color-primary-content);
}
.color-secondary {
  color: var(--color-secondary);
}
.color-secondary-content {
  color: var(--color-secondary-content);
}
.color-accent {
  color: var(--color-accent);
}
.color-accent-content {
  color: var(--color-accent-content);
}
.color-info {
  color: var(--color-info);
}
.color-info-content {
  color: var(--color-info-content);
}
.color-success {
  color: var(--color-success);
}
.color-success-content {
  color: var(--color-success-content);
}
.color-warning {
  color: var(--color-warning);
}
.color-warning-content {
  color: var(--color-warning-content);
}
.color-error {
  color: var(--color-error);
}
.color-error-content {
  color: var(--color-error-content);
}
:where(h1, h2, h3, h4, h5, h6, p) {
  color: var(--color-white);
}
:where(a p) {
  font-size: var(--text-sm);
  line-height: var(--tw-leading, var(--text-sm--line-height));
}
:where(h6) {
  font-size: var(--text-xs);
  line-height: var(--tw-leading, var(--text-xs--line-height));
}
:where(h5) {
  font-size: var(--text-sm);
  line-height: var(--tw-leading, var(--text-sm--line-height));
}
:where(h4) {
  font-size: var(--text-lg);
  line-height: var(--tw-leading, var(--text-lg--line-height));
}
:where(h3) {
  font-size: var(--text-2xl);
  line-height: var(--tw-leading, var(--text-2xl--line-height));
}
:where(h2) {
  font-size: var(--text-4xl);
  line-height: var(--tw-leading, var(--text-4xl--line-height));
}
:where(h1) {
  font-size: var(--text-5xl);
  line-height: var(--tw-leading, var(--text-5xl--line-height));
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-border-style: solid;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-font-weight: initial;
    }
  }
}
