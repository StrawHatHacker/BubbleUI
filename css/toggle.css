:where(.toggle) {
  --width: 4rem;
  --height: 2rem;
  --color-toggle-bg: color-mix(in oklch,var(--color-neutral), white 30%);
  --color-toggle-bg-checked: var(--color-neutral);
  --color-border: color-mix(in oklch, var(--color-neutral-content), black 50%);
  --color-border-checked: var(--color-neutral);

  @apply appearance-none inline-block relative rounded-lg cursor-pointer m-0 shadow-sm shadow-black/40 overflow-clip;
  width: var(--width);
  height: var(--height);
  background-color: var(--color-toggle-bg);
  transition: background-color var(--transition-speed) ease;
  border: 3px solid var(--color-border);
  box-sizing: content-box !important;

  &::before {
    content: "";
    transition: opacity var(--transition-speed) ease-out;
    opacity: 0;
    top: 0.175rem;
    left: 0.175rem; 
    @apply absolute h-1/3 w-1/3 rounded-tl-xl border-t-3 border-l-3;
  }
}

/* The inner circle */
:where(.toggle)::after {
  --toggle-spacing: 4px;

  content: "";
  position: absolute;
  top: var(--toggle-spacing);
  left: var(--toggle-spacing);
  height: calc(var(--height) - calc(var(--toggle-spacing) * 2));
  background-color: var(--color-neutral-content);
  transition: transform var(--transition-speed) ease-out;
  transform: translateX(0);
  @apply rounded-sm aspect-square;
}

/* When checked */
.toggle:checked {
  background-color: var(--color-toggle-bg-checked);
  border-color: var(--color-border-checked);

  &::before {
    opacity: 0.5;
  }
}

/* Move the ::after pseudo-element (circle) when checked */
.toggle:checked::after {
  transform: translateX(calc(var(--width) - var(--height)));
}

.toggle:focus-visible:checked {
  outline: 2px solid var(--color-border-checked);
}

.toggle:focus-visible {
  outline: 2px solid var(--color-border);
}

.toggle-sm {
  --width: 3rem;
  --height: 1.5rem;
  @apply rounded-md;
  &::after {
    --toggle-spacing: 3px;
    @apply rounded-xs;
  }
}

.toggle-lg {
  --width: 5rem;
  --height: 2.5rem;
  &::after {
    --toggle-spacing: 5px;
  }
}

.toggle-primary {
  --color-toggle-bg: color-mix(in oklab, var(--color-primary), transparent 30%);
  --color-toggle-bg-checked: var(--color-primary);
  --color-border: var(--color-primary);
  --color-border-checked: var(--color-primary);

  &::after {
    background-color: var(--color-primary-content);
  }
}

.toggle-secondary {
  --color-toggle-bg: color-mix(in oklab, var(--color-secondary), transparent 30%);
  --color-toggle-bg-checked: var(--color-secondary);
  --color-border: var(--color-secondary);
  --color-border-checked: var(--color-secondary);

  &::after {
    background-color: var(--color-secondary-content);
  }
}

.toggle-accent {
  --color-toggle-bg: color-mix(in oklab, var(--color-accent), transparent 30%);
  --color-toggle-bg-checked: var(--color-accent);
  --color-border: var(--color-accent);
  --color-border-checked: var(--color-accent);

  &::after {
    background-color: var(--color-accent-content);
  }
}

.toggle-info {
  --color-toggle-bg: color-mix(in oklab, var(--color-info), transparent 30%);
  --color-toggle-bg-checked: var(--color-info);
  --color-border: var(--color-info);
  --color-border-checked: var(--color-info);

  &::after {
    background-color: var(--color-info-content);
  }
}

.toggle-success {
  --color-toggle-bg: color-mix(in oklab, var(--color-success), transparent 30%);
  --color-toggle-bg-checked: var(--color-success);
  --color-border: var(--color-success);
  --color-border-checked: var(--color-success);

  &::after {
    background-color: var(--color-success-content);
  }
}

.toggle-warning {
  --color-toggle-bg: color-mix(in oklab, var(--color-warning), transparent 30%);
  --color-toggle-bg-checked: var(--color-warning);
  --color-border: var(--color-warning);
  --color-border-checked: var(--color-warning);

  &::after {
    background-color: var(--color-warning-content);
  }
}

.toggle-error {
  --color-toggle-bg: color-mix(in oklab, var(--color-error), transparent 30%);
  --color-toggle-bg-checked: var(--color-error);
  --color-border: var(--color-error);
  --color-border-checked: var(--color-error);

  &::after {
    background-color: var(--color-error-content);
  }
}
